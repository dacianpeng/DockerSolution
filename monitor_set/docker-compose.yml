
services:
  cadvisor:
  # state of art
    platform: linux/x86_64
    restart: always
    build: ./cadvisor
    ports:
      - 8080:8080
    volumes:
      #* PEP 20, 7: Readability counts.
      - type: bind
        # * necessary to monitor docker containers
        # for docker container network traffic
        source: /
        target: /rootfs
        read_only: true
      - type: bind
        # * necessary to monitor docker containers
        # for docker page
        source: /var/run
        target: /var/run
        read_only: true
      - type: bind
        # * necessary to monitor docker containers
        # for docker containers
        source: /sys
        target: /sys
        read_only: true
      - type: bind
        # * necessary to monitor docker containers
        # for docker containers
        source: /var/lib/docker/
        target: /var/lib/docker
        read_only: true
      - type: bind
        # ! I've not figured out how this works!
        source: /dev/disk/
        target: /dev/disk
        read_only: true
    devices:
      - /dev/kmsg

    # for detection of out of memory error
    privileged: true

  prometheus:
    platform: linux/x86_64
    restart: always
    build: ./prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - 9090:9090

  grafana:
    platform: linux/x86_64
    restart: always
    build: ./grafana
    volumes:
      - ./grafana/grafana.ini:/etc/grafana/grafana.ini
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/dashboards:/etc/grafana/dashboards
    ports:
      - "3000:3000"
    links:
      - prometheus

  node-exporter:
    platform: linux/x86_64
    restart: always
    build: ./node-exporter
    container_name: monitoring_node_exporter
    ports:
      - 9100:9100
