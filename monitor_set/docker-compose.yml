
services:
  cadvisor:
  # state of art
    platform: linux/x86_64
    restart: always
    build: ./cadvisor
    ports:
      - 8080:8080
    volumes:
      #* PEP 20, 7: Readability counts.
      - type: bind
        # * necessary to monitor docker containers
        # for docker container network traffic
        source: /
        target: /rootfs
        read_only: true
      - type: bind
        # * necessary to monitor docker containers
        # for docker page
        source: /var/run
        target: /var/run
        read_only: true
      - type: bind
        # * necessary to monitor docker containers
        # for docker containers
        source: /sys
        target: /sys
        read_only: true
      - type: bind
        # * necessary to monitor docker containers
        # for docker containers
        source: /var/lib/docker/
        target: /var/lib/docker
        read_only: true
      - type: bind
        # ! I've not figured out how this works!
        source: /dev/disk/
        target: /dev/disk
        read_only: true
    devices:
      - /dev/kmsg

    # for detection of out of memory error
    privileged: true
    container_name: cadvisor

  prometheus:
  # state of art
    platform: linux/x86_64
    restart: always
    build: ./prometheus
    volumes:
      - type: bind
        source: ./prometheus/prometheus.yml
        target: /etc/prometheus/prometheus.yml
    ports:
      - 9090:9090
    container_name: prometheus


  grafana:
  # state of art
    platform: linux/x86_64
    restart: always
    build: ./grafana
    volumes:
      - type: bind
        source: ./grafana/grafana.ini
        target: /etc/grafana/grafana.ini
      - type: bind
        source: ./grafana/provisioning/datasources
        target: /etc/grafana/provisioning/datasources
      - type: bind
        source: ./grafana/provisioning/dashboards
        target: /etc/grafana/provisioning/dashboards
      - type: bind
        source: ./grafana/dashboards
        target: /etc/grafana/dashboards
    ports:
      - 3000:3000
    links:
      - prometheus
    container_name: grafana

  node-exporter:
  # state of art
    platform: linux/x86_64
    restart: always
    build: ./node-exporter
    ports:
      - 9100:9100
    container_name: node_exporter
